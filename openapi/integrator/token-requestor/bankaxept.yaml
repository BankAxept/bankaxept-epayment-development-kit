openapi: 3.0.0
info:
  version: 0.3.0
  title: BankAxept ePayment Token Requestor API - ePayment Platform
  description: BankAxept ePayment Token Requestor APIs - ePayment Platform side

servers:
  - url: https://api.epp-stoetest.cloud/token-requestor

security:
  - bearerAuth: [ ]

paths:

  /v1/payment-tokens:
    post:
      summary: Request a card enrolment
      operationId: enrolCard
      parameters:
        - $ref: '../components.yaml#/components/parameters/correlationId'
      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/EnrolCardRequest'
      responses:
        '200':
          $ref: '../components.yaml#/components/responses/200Ok'
        '201':
          $ref: '../components.yaml#/components/responses/201Ok'
        '400':
          $ref: '../components.yaml#/components/responses/400Error'
        '409':
          $ref: '../components.yaml#/components/responses/409Error'
        '422':
          $ref: '../components.yaml#/components/responses/422Error'
        '500':
          $ref: '../components.yaml#/components/responses/500Error'
        '503':
          $ref: '../components.yaml#/components/responses/503Error'

  /v1/payment-tokens/{tokenId}/deletion:
    post:
      summary: Delete a token
      operationId: deleteToken
      parameters:
        - $ref: '../components.yaml#/components/parameters/tokenId'
        - $ref: '../components.yaml#/components/parameters/correlationId'
      responses:
        '200':
          $ref: '../components.yaml#/components/responses/200Ok'
        '201':
          $ref: '../components.yaml#/components/responses/201Ok'
        '400':
          $ref: '../components.yaml#/components/responses/400Error'
        '409':
          $ref: '../components.yaml#/components/responses/409Error'
        '422':
          $ref: '../components.yaml#/components/responses/422Error'
        '500':
          $ref: '../components.yaml#/components/responses/500Error'
        '503':
          $ref: '../components.yaml#/components/responses/503Error'

  /v1/eligible-banks:
    get:
      summary: Eligible banks
      description: Returns the subset of the input list of banks that are eligible for enrolment.
      operationId: eligibleBanks
      parameters:
        - name: bankIdentifier
          description: 4-digit bank identifier
          in: query
          schema:
            items:
              type: string
              pattern: "[0-9]{4}"
              example: "9998"
            type: array
          required: true
      responses:
        '200':
          description: Request processed
          content:
            application/json;charset=UTF-8:
              schema:
                type: object
                description: Comma-separated list of eligible bank identifiers
                example: ["9998", "0001"]
        '400':
          description: Invalid input format
  /v1/card-eligibility:
    post:
      summary: Check card eligibility
      description: Check if a card is eligible for enrolment in ePayment Platform.
      operationId: cardEligibility
      parameters:
        - $ref: '../components.yaml#/components/parameters/correlationId'
      requestBody:
        required: true
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CardEligibilityRequest'
      responses:
        '204':
          description: CardEligibility request processed successfully and the card is eligible for enrollment.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardEligibilityError"
        '422':
          description: The server was unable to process the request because it contains invalid data.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardEligibilityError"
        '500':
          description: Internal Server Error, request can be retried later.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CardEligibilityError"

components:
  schemas:
    EnrolCardRequest:
      type: object
      required:
        - messageId
        - tokenRequestorReference
        - encryptedCardholderAuthenticationData
      properties:
        messageId:
          $ref: '../components.yaml#/components/schemas/messageId'
        tokenRequestorId:
          $ref: '../components.yaml#/components/schemas/tokenRequestorId'
        tokenRequestorReference:
          $ref: '../components.yaml#/components/schemas/tokenRequestorReference'
        encryptedCardholderAuthenticationData:
          $ref: '#/components/schemas/encryptedEnrolmentCardholderAuthenticationData'

    CardEligibilityRequest:
      type: object
      required:
        - tokenRequestorId
        - encryptedEnrolmentData
      properties:
        encryptedEnrolmentData:
          $ref: '#/components/schemas/encryptedEnrolmentCardholderAuthenticationData'
        tokenRequestorId:
          $ref: '../components.yaml#/components/schemas/tokenRequestorId'

    EnrolmentCardholderAuthenticationData:
      type: object
      required:
        - enrolmentData
        - iss
        - iat
      properties:
        enrolmentData:
          $ref: '#/components/schemas/EnrolmentData'
        iss:
          $ref: '../components.yaml#/components/schemas/iss'
        iat:
          $ref: '../components.yaml#/components/schemas/iat'
        verifiedCardholderAuthenticationSignedData:
          $ref: '../components.yaml#/components/schemas/verifiedCardholderAuthenticationSignedData'
        cardholderAuthenticationData:
          $ref: '#/components/schemas/CardholderAuthenticationData'

    PermissionGrant:
      $ref: '../components.yaml#/components/schemas/PermissionGrant'

    EnrolmentData:
      type: object
      required:
        - nin
        - accountNumber
      properties:
        nin:
          $ref: '../components.yaml#/components/schemas/nin'
        accountNumber:
          $ref: '../components.yaml#/components/schemas/accountNumber'

    CardholderAuthenticationData:
      type: object
      required:
        - nin
      properties:
        nin:
          $ref: '../components.yaml#/components/schemas/nin'

    encryptedEnrolmentCardholderAuthenticationData:
      type: string
      example: "eyJlbmMiOiJBMjU2Q0JDLUhTNTEyIiwiYWxnIjoiUlNBLU9BRVAtMjU2In0.f5nkE6FuGYkoa4usRQ1MhUJY34pYi31xgSiApiR1uP4tSXV3DNnY3N5Zq9Bnt1OucN2nJxAqCcND4G8TpGw9kofFcLcs5kXHg7nmIgjI8ZXTYx7GuZ_w6YxVTzCmjT5dpSlOQFkuCfJn2VdKnF4PjaqiKW9fWluOKorUZdsjsDl5PjIjf3ndqCtGEma6TBpKxLX0FnCZzvsVATCBcxqwKLvkAYFdFFtLfxe5OvW0PFsy4OjasODW3Kk55e58v5xXB8bP9hzr5S7sXFlzX2TG583MLLXG3K1E3XG0R262vs2cGgSA1B6zmujvmkpR4lLofwgahpO-ZrhGZtXE0-wFJw.NDB8Ln7XCf1q1p6ddRvnSw.PTBsKUkN5stmSQwrQ-jQLA.ece3W1q3AiMdg5QQbAd1tq_nQWLRkyNnk2mL1TP8fpQ"
      description: >-
        The Enrolment and Cardholder Authentication Data is encrypted according to the Java Web Encryption specification defined in RFC-7516.
        See schema EnrolmentCardholderAuthenticationData for decrypted data format.

    CardEligibilityError:
      type: object
      properties:
        errorCode:
          $ref: '#/components/schemas/cardEligibilityErrorCode'
        errorMessage:
          type: string

    cardEligibilityErrorCode:
      type: string
      example: 'CARD_EXPIRED'
      description: Error response from DES
      enum:
        - MISSING_PARAM
        - UNKNOWN_TOKENREQUESTOR
        - INVALID_DATA
        - CARD_EXPIRED
        - CARD_SUSPENDED
        - CARD_REVOKED
        - INVALID_FUNDING_PAN
        - ILLEGAL_OPERATION
        - UNEXPECTED_SERVER_ERROR
